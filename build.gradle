apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'maven-publish'

version = '0.1'
description = 'Create stateless security on your Spring endpoints using JWT.'
sourceCompatibility = 1.8
targetCompatibility = 1.8

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    def springBootVersion = '1.4.0.RELEASE'
    compile 'io.jsonwebtoken:jjwt:0.6.0'
    compile "org.springframework.boot:spring-boot:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"
    compile 'javax.servlet:javax.servlet-api:3.1.0'

    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Spring Security JWT',
                   'Implementation-Version': version,
                   'provider': gradle
    }
}


def repoUser = hasProperty('ossrhUser') ? ossrhUser : System.getenv('ossrhUser')
def repoPassword = hasProperty('ossrhPassword') ? ossrhPassword : System.getenv('ossrhUser')

apply plugin: 'io.codearte.nexus-staging'

if (project.hasProperty('release')) {
    subprojects {
        task javadocJar(type: Jar) {
            classifier = 'javadoc'
            from javadoc
        }

        task sourcesJar(type: Jar) {
            classifier = 'sources'
            from sourceSets.main.allSource
        }

        artifacts {
            archives javadocJar, sourcesJar
        }
    }

    allprojects {
        apply plugin: 'signing'
        apply plugin: 'maven'

        signing {
            sign configurations.archives
        }

        uploadArchives {
            repositories {
                mavenDeployer {
                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                    repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                        authentication(userName: repoUser, password: repoPassword)
                    }

                    pom.project {
                        name project.name
                        description project.description
                        packaging 'jar'
                        url 'https://github.com/looorent/spring-security-jwt'

                        scm {
                            connection 'scm:git:https://github.com/looorent/spring-security-jwt'
                            developerConnection 'scm:git:git@github.com:looorent/spring-security-jwt.git'
                            url 'https://github.com/looorent/spring-security-jwt'
                        }

                        licenses {
                            license {
                                name 'The MIT License (MIT)'
                                url 'http://opensource.org/licenses/MIT'
                                distribution 'repo'
                            }
                        }

                        developers {
                            developer {
                                id = 'youraccount'
                                name = 'Lorent Lempereur'
                                email = 'lorent.lempereur.dev@gmail.com'
                            }
                        }
                    }
                }
            }
        }
    }
}

nexusStaging {
    username = repoUser
    password = repoPassword
}